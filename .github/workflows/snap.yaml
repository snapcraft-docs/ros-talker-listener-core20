name: snap
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

jobs:
  main-snap:
    uses: ubuntu-robotics/snap_workflows/.github/workflows/snap.yaml@main
    with:
      ubuntu-image: ubuntu-20.04
      branch-name: main
      snap-name: ros-talker-listener
      snap-install-args: --devmode
      test-script: |
                    #!/bin/bash
                    
                    ## Install ROS
                    sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

                    sudo apt install curl
                    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
                    sudo apt update
                    sudo apt install ros-noetic-ros-base

                    check_node() {
                        local node_name=$1
                        rosnode list | grep -q "/$node_name"
                        if [ $? -eq 0 ]; then
                            echo "$node_name is running."
                        else
                            echo "Error - $node_name is not running."
                            kill $pid
                            exit 1
                        fi
                    }
                    check_topic() {
                        local topic_name=$1
                        local pub_name=$2
                        local sub_name=$3
                        rostopic info /$topic_name | grep -E "$pub_name|$sub_name"
                        if [ $? -eq 0 ]; then
                            echo "$$topic_name has publisher $pub_name and subscriber $sub_name."
                        else
                            echo "Error - $topic_name does not have pub/sub"
                            kill $pid
                            exit 1
                        fi
                    }

                    source /opt/ros/noetic/setup.bash

                    ros-talker-listener &
                    pid=$!

                    sleep 5

                    check_node talker
                    check_node listener
                    check_topic chatter talker listener
                    kill $pid

                    echo "All checks passed successfully."
